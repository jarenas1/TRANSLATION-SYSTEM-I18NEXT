{
    "title": "초보 프로그래머를 위한 기본 조언",
    "subtitle1": "기초부터 시작하기",
    "subtitle2": "프로그래밍 언어를 선택하고 연습하기",
    "subtitle3": "실수를 두려워하지 마세요",
    "subtitle4": "정기적으로 연습하세요",
    "subtitle5": "도움을 요청하는 것을 두려워하지 마세요",
    "subtitle6": "학습 자료를 찾아보세요",
    "subtitle7": "다른 사람과 협력하세요",
    "subtitle8": "최신 정보를 유지하세요",
    "subtitle9": "포기하지 마세요",
    "paragraph1": "특정 언어나 기술을 깊이 파기 전에 프로그래밍의 기본 개념을 배우세요. 변수, 제어 구조, 함수 등이 어떻게 작동하는지 이해하면 튼튼한 기초를 쌓을 수 있습니다.",
    "paragraph2": "한 번에 여러 언어를 배우려 하지 말고 자신을 압도하지 마세요. 흥미가 있는 언어를 선택하고 연습을 시작하세요. Python은 배우기 쉽고 지원 커뮤니티가 넓어 초보자에게 좋은 선택입니다.",
    "paragraph3": "실수는 학습 과정의 일부입니다. 처음에 무언가가 작동하지 않더라도 낙담하지 마세요. 실수에서 배우고 계속 나아가세요.",
    "paragraph4": "프로그래밍은 다른 기술과 마찬가지로 많이 연습할수록 더 잘하게 됩니다. 정기적으로 코드를 작성하고 프로그래밍 문제를 해결하는 데 시간을 투자하세요.",
    "paragraph5": "배우는 가장 좋은 방법은 무언가를 만드는 것입니다. 작은 프로젝트부터 시작하고 경험이 쌓이면 점차 복잡성을 높여보세요. 하지만 압도감을 느낀다면 다른 사람의 도움을 요청하는 것을 주저하지 마세요.",
    "paragraph6": "온라인에는 많은 자료가 있습니다. 튜토리얼, 강좌, 책, 토론 포럼 등을 활용하여 새로운 개념을 배우고 문제를 해결하세요.",
    "paragraph7": "프로그래머 커뮤니티에 참여하고 오픈 소스 프로젝트에 기여하거나 멘토를 찾아보세요. 다른 프로그래머와 협력하면 새로운 기술을 배우고 문제를 해결하는 다양한 접근 방식을 볼 수 있습니다.",
    "paragraph8": "프로그래밍 세계의 기술은 빠르게 발전하고 있습니다. 최신 동향, 도구 및 권장 사례를 파악하세요.",
    "paragraph9": "프로그래밍은 때때로 도전적일 수 있지만 포기하지 마세요. 인내와 연습을 통해 시간이 지남에 따라 나아질 것입니다."
}
